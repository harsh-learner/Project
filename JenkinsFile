pipeline {
  agent {
    docker {
      image 'learnerharsh/my-jenkins-agent-image1:v1'
      args '--user root -v /var/run/docker.sock:/var/run/docker.sock' // mount Docker socket to access the host's Docker daemon
    }
  }
  stages {
    stage('Checkout') {
      steps {
        sh 'echo passed'
        //git branch: 'main', url: ''https://github.com/harsh-learner/Jenkins-Zero-To-Hero.git'
      }
    }
    stage('Build and Test') {
      steps {
        sh 'ls -ltr'
        // build the project and create a JAR file
											 
											
									 
        sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && mvn clean package'
      }
    }
			
    stage('Static Code Analysis') {
      environment {
        SONAR_URL = "http://3.6.87.74:9000/"
      }
      steps {
        withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
          sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && mvn sonar:sonar -Dsonar.login=$SONAR_AUTH_TOKEN -Dsonar.host.url=${SONAR_URL}'
        }
      }
    }
    stage('Build and Push Docker Image') {
      environment {
        DOCKER_IMAGE="ultimate-cicd:${BUILD_NUMBER}"
		DOCKER_HUB_REGISTRY='https://index.docker.io/v1/'
										 
        // DOCKERFILE_LOCATION = "java-maven-sonar-argocd-helm-k8s/spring-boot-app/Dockerfile"
      }
      steps {
        script {
            sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && docker build -t ${DOCKER_IMAGE} .'
            withCredentials([usernamePassword(credentialsId: 'docker-cred', usernameVariable: 'DOCKER_HUB_USERNAME', passwordVariable: 'DOCKER_HUB_PASSWORD')]) {
			sh 'docker tag $DOCKER_IMAGE learnerharsh/$DOCKER_IMAGE'
			sh 'docker login -u learnerharsh -p $DOCKER_HUB_PASSWORD'
			sh 'docker push  learnerharsh/$DOCKER_IMAGE'
            }
        }
      }
    }
    stage('Update Deployment File') {
            steps {
                withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
                    sh '''
                        git config user.email "harsh.xyz@gmail.com"
                        git config user.name "Harsh-Learner"
                        BUILD_NUMBER=${BUILD_NUMBER}
                        GIT_REPO_NAME="Jenkins-Zero-To-Hero"
                        GIT_USER_NAME="harsh-learner"
                        
                        # Replace the image tag directly in the deployment.yml
                        sed -i "s/replaceImageTag/${BUILD_NUMBER}/g" java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
                        git add java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
                        git commit -m "Update deployment image to version ${BUILD_NUMBER}"
                        git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:main
                    '''
                }
            }
        }
    }
   
}
